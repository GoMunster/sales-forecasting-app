name: Deploy React App to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Debug - List files after checkout
        run: ls -la
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      
      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          npm install --verbose
      
      - name: Debug - List files after npm install
        run: ls -la
      
      - name: Create src directory if it doesn't exist
        run: mkdir -p src
      
      - name: Check for required files
        run: |
          if [ ! -f "src/index.js" ]; then
            echo "Creating minimal src/index.js"
            echo "import React from 'react'; import ReactDOM from 'react-dom/client'; import './index.css'; import App from './App'; const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<React.StrictMode><App /></React.StrictMode>);" > src/index.js
          fi
          
          if [ ! -f "src/App.js" ]; then
            echo "Creating minimal src/App.js"
            echo "import React from 'react'; function App() { return <div className=\"App\"><header className=\"App-header\"><h1>Sales Forecasting App</h1><p>Coming soon!</p></header></div>; } export default App;" > src/App.js
          fi
          
          if [ ! -f "src/index.css" ]; then
            echo "Creating minimal src/index.css"
            echo "body { margin: 0; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } code { font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace; }" > src/index.css
          fi
          
          if [ ! -f "public/index.html" ]; then
            echo "Creating minimal public/index.html"
            mkdir -p public
            echo "<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"utf-8\" /><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" /><title>Sales Forecasting App</title></head><body><noscript>You need to enable JavaScript to run this app.</noscript><div id=\"root\"></div></body></html>" > public/index.html
          fi
      
      - name: Debug - List directories after creating files
        run: |
          echo "Contents of the current directory:"
          ls -la
          echo "Contents of the src directory:"
          ls -la src
          echo "Contents of the public directory:"
          ls -la public 2>/dev/null || echo "No public directory"
      
      - name: Build
        run: |
          echo "Building app..."
          npm run build --verbose
      
      - name: Debug - List build output
        run: |
          echo "Build directory contents:"
          ls -la build 2>/dev/null || echo "No build directory was created!"
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload pages artifact
        if: success()
        uses: actions/upload-pages-artifact@v3
        with:
          path: './build'
      
      - name: Upload debug log if build fails
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: npm-debug.log*

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
